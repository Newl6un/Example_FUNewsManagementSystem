// <auto-generated />
using System;
using LeQuangTrungMVC.DataAccessObjects;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LeQuangTrungMVC.DataAccessObjects.Migrations
{
    [DbContext(typeof(FunewsManagementContext))]
    [Migration("20250228164156_ConfigTag")]
    partial class ConfigTag
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LeQuangTrungMVC.BusinessObjects.Models.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CategoryID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("CategoryDescription")
                        .HasColumnType("text");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ParentCategoryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ParentCategoryID");

                    b.HasKey("CategoryId")
                        .HasName("PK__Category__19093A2B8AFE0FEB");

                    b.HasIndex(new[] { "ParentCategoryId" }, "IX_Category_ParentCategoryID");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("LeQuangTrungMVC.BusinessObjects.Models.NewsArticle", b =>
                {
                    b.Property<Guid>("NewsArticleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("NewsArticleID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CategoryID");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CreatedByID");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Headline")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("NewsContent")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NewsSource")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("NewsStatus")
                        .HasColumnType("int");

                    b.Property<string>("NewsTile")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<Guid?>("UpdatedById")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UpdatedByID");

                    b.HasKey("NewsArticleId")
                        .HasName("PK__NewsArti__4CD0926C20CC2030");

                    b.HasIndex(new[] { "CategoryId" }, "IX_NewsArticle_CategoryID");

                    b.HasIndex(new[] { "CreatedById" }, "IX_NewsArticle_CreatedByID");

                    b.HasIndex(new[] { "UpdatedById" }, "IX_NewsArticle_UpdatedByID");

                    b.ToTable("NewsArticle", (string)null);
                });

            modelBuilder.Entity("LeQuangTrungMVC.BusinessObjects.Models.SystemAccount", b =>
                {
                    b.Property<Guid>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("AccountID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("AccountEmail")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("AccountPassword")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("AccountRole")
                        .HasColumnType("int");

                    b.HasKey("AccountId")
                        .HasName("PK__SystemAc__349DA586CF6622FA");

                    b.HasIndex(new[] { "AccountEmail" }, "UQ__SystemAc__FC770D33B3276155")
                        .IsUnique();

                    b.ToTable("SystemAccount", (string)null);
                });

            modelBuilder.Entity("LeQuangTrungMVC.BusinessObjects.Models.Tag", b =>
                {
                    b.Property<Guid>("TagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TagID")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("TagId")
                        .HasName("PK__Tag__657CFA4CFB003B55");

                    b.ToTable("Tag", (string)null);
                });

            modelBuilder.Entity("NewsTag", b =>
                {
                    b.Property<Guid>("NewsArticleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("NewsArticleID");

                    b.Property<Guid>("TagId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("TagID");

                    b.HasKey("NewsArticleId", "TagId");

                    b.HasIndex(new[] { "TagId" }, "IX_NewsTag_TagID");

                    b.ToTable("NewsTag", (string)null);
                });

            modelBuilder.Entity("LeQuangTrungMVC.BusinessObjects.Models.Category", b =>
                {
                    b.HasOne("LeQuangTrungMVC.BusinessObjects.Models.Category", "ParentCategory")
                        .WithMany("InverseParentCategory")
                        .HasForeignKey("ParentCategoryId")
                        .HasConstraintName("FK_Category_ParentCategoryID");

                    b.Navigation("ParentCategory");
                });

            modelBuilder.Entity("LeQuangTrungMVC.BusinessObjects.Models.NewsArticle", b =>
                {
                    b.HasOne("LeQuangTrungMVC.BusinessObjects.Models.Category", "Category")
                        .WithMany("NewsArticles")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK_NewsArticle_CategoryID");

                    b.HasOne("LeQuangTrungMVC.BusinessObjects.Models.SystemAccount", "CreatedBy")
                        .WithMany("NewsArticleCreatedBies")
                        .HasForeignKey("CreatedById")
                        .IsRequired()
                        .HasConstraintName("FK_NewsArticle_CreatedByID");

                    b.HasOne("LeQuangTrungMVC.BusinessObjects.Models.SystemAccount", "UpdatedBy")
                        .WithMany("NewsArticleUpdatedBies")
                        .HasForeignKey("UpdatedById")
                        .HasConstraintName("FK_NewsArticle_UpdatedByID");

                    b.Navigation("Category");

                    b.Navigation("CreatedBy");

                    b.Navigation("UpdatedBy");
                });

            modelBuilder.Entity("NewsTag", b =>
                {
                    b.HasOne("LeQuangTrungMVC.BusinessObjects.Models.NewsArticle", null)
                        .WithMany()
                        .HasForeignKey("NewsArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_NewsTag_NewsArticleID");

                    b.HasOne("LeQuangTrungMVC.BusinessObjects.Models.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_NewsTag_TagID");
                });

            modelBuilder.Entity("LeQuangTrungMVC.BusinessObjects.Models.Category", b =>
                {
                    b.Navigation("InverseParentCategory");

                    b.Navigation("NewsArticles");
                });

            modelBuilder.Entity("LeQuangTrungMVC.BusinessObjects.Models.SystemAccount", b =>
                {
                    b.Navigation("NewsArticleCreatedBies");

                    b.Navigation("NewsArticleUpdatedBies");
                });
#pragma warning restore 612, 618
        }
    }
}

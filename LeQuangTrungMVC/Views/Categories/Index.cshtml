@* @model IEnumerable<LeQuangTrungMVC.BusinessObjects.Models.Category>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.CategoryName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CategoryDescription)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsActive)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ParentCategory)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.CategoryName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CategoryDescription)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsActive)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ParentCategory.CategoryName)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.CategoryId">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.CategoryId">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.CategoryId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
 *@

 @using LeQuangTrungMVC.BusinessObjects.Enums;
@model IEnumerable<LeQuangTrungMVC.BusinessObjects.Models.Category>

@{
    ViewData["Title"] = "Categories";
    var role = Context.Session.GetString("AccountRole");
    bool isStaffOrAdmin = role != null &&
        (role.Equals(AccountRole.Staff.ToString()) || role.Equals(AccountRole.Admin.ToString()));
}

<h1>Categories</h1>

@if (isStaffOrAdmin)
{
    <div class="mb-3">
        <button type="button" class="btn btn-primary"
                onclick="modalDialogManager.loadFormModal('@Url.Action("CreateModal", "Categories")', '#commonModal')">
            Create New Category
        </button>
    </div>
}

<table class="table">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.CategoryName)</th>
            <th>@Html.DisplayNameFor(model => model.CategoryDescription)</th>
            <th>@Html.DisplayNameFor(model => model.IsActive)</th>
            <th>@Html.DisplayNameFor(model => model.ParentCategory)</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.CategoryName)</td>
                <td>@Html.DisplayFor(modelItem => item.CategoryDescription)</td>
                <td>@(item.IsActive ? "Yes" : "No")</td>
                <td>
                    @(item.ParentCategory != null ? Html.DisplayFor(modelItem => item.ParentCategory.CategoryName) : "None")
                </td>
                <td>
                    @if (isStaffOrAdmin)
                    {
                        <button type="button" class="btn btn-sm btn-primary"
                                onclick="modalDialogManager.loadFormModal('@Url.Action("EditModal", "Categories", new { id = item.CategoryId })', '#commonModal')">
                            Edit
                        </button>
                        <a asp-action="Details" asp-route-id="@item.CategoryId" class="btn btn-sm btn-info">Details</a>
                        @*  <button type="button" class="btn btn-sm btn-danger"
                                data-delete-url="@Url.Action("Delete", "Categories", new { id = item.CategoryId })"
                                data-delete-name="@item.CategoryName"
                                data-delete-type="Category">
                            Delete
                        </button> *@
                        <delete-button controller-name="Categories"
                                       item-id="@item.CategoryId">
                        </delete-button>
                    }
                    else
                    {
                        <a asp-action="Details" asp-route-id="@item.CategoryId" class="btn btn-sm btn-info">Details</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        // Enable validation for dynamically loaded forms
        $(document).on('shown.bs.modal', '#commonModal', function () {
            $.validator.unobtrusive.parse($(this).find('form'));
        });
    </script>
}
